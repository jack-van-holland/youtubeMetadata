delimiter //
DROP PROCEDURE IF EXISTS getVideos //
CREATE PROCEDURE getVideos(IN MAX_RESULTS int, IN VIDEO_ID_PARAM varchar(1000), IN AUTH_ID_PARAM varchar(1000), IN TITLE_CONTAIN varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin, IN TITLE_NOT_CONTAIN varchar(1000), IN TITLE_EXCEED int, IN TITLE_LESS int, IN TITLE_ALL_CAPS int, IN DESC_CONTAIN varchar(1000), IN DESC_NOT_CONTAIN varchar(1000), IN DESC_EXCEED int, IN DESC_LESS int, IN DESC_ALL_CAPS int, IN CREATED_BEFORE varchar(100), IN CREATED_AFTER varchar(100), IN VIEW_EXCEED int, IN VIEW_LESS int, IN LIKE_EXCEED int, IN LIKE_LESS int, IN DISLIKE_EXCEED int, IN DISLIKE_LESS int, IN COM_EXCEED int, IN COM_LESS int, IN DURATION_EXCEED int, IN DURATION_LESS int, IN CATEGORY_GIVEN varchar(4), IN SORT_PARAM varchar(50), IN SORT_DIR varchar(20), IN GET_VIDEO_ID int, IN GET_CHANNEL_ID int, IN GET_TITLE int, IN GET_DESC int, IN GET_DATE int, IN GET_VIEWS int, IN GET_LIKES int, IN GET_DISLIKES int, IN GET_COM int, IN GET_DURATION int, IN GET_CATEGORY int)
BEGIN
set @rownum:=0;
SELECT(@rownum:=@rownum+1) AS num,
CASE WHEN GET_VIDEO_ID = 1 THEN video_id ELSE NULL END,
CASE WHEN GET_CHANNEL_ID = 1 THEN channel_id ELSE NULL END,
CASE WHEN GET_TITLE = 1 THEN title ELSE NULL END,
CASE WHEN GET_DESC = 1 THEN description ELSE NULL END,
CASE WHEN GET_DATE = 1 THEN createdDate ELSE NULL END,
CASE WHEN GET_VIEWS = 1 THEN views ELSE NULL END,
CASE WHEN GET_LIKES = 1 THEN likes ELSE NULL END,
CASE WHEN GET_DISLIKES = 1 THEN dislikes ELSE NULL END,
CASE WHEN GET_COM = 1 then com_num ELSE NULL END,
CASE WHEN GET_DURATION = 1 THEN duration ELSE NULL END,
CASE WHEN GET_CATEGORY = 1 THEN category ELSE NULL END

FROM (SELECT * FROM (SELECT Video.video_id, Video.title, Video.channel_id, Video.createdDate, Video.category, Video.likes, Video.dislikes, Video.views, Video.description, Video.duration, COUNT(comment_id) AS com_num FROM Video LEFT JOIN Comment ON Video.video_id = Comment.video_id GROUP BY Video.video_id) AS f
WHERE
video_id = CASE WHEN LENGTH(VIDEO_ID_PARAM) = 0 THEN video_id ELSE VIDEO_ID_PARAM END AND
channel_id = CASE WHEN LENGTH(AUTH_ID_PARAM) = 0 THEN channel_id ELSE AUTH_ID_PARAM END AND
title LIKE CASE WHEN LENGTH(TITLE_CONTAIN) = 0 THEN title ELSE CONCAT("%", TITLE_CONTAIN, "%") END AND
title NOT LIKE CASE WHEN LENGTH(TITLE_NOT_CONTAIN) = 0 then CONCAT("a",title) ELSE CONCAT("%", TITLE_NOT_CONTAIN, "%") END AND
LENGTH(title) > TITLE_EXCEED AND
LENGTH(title) < CASE WHEN TITLE_LESS = -1 THEN ~0 ELSE TITLE_LESS END AND
title = CASE WHEN TITLE_ALL_CAPS = 1 THEN BINARY UPPER(title) ELSE title END AND
description LIKE CASE WHEN LENGTH(DESC_CONTAIN) = 0 THEN description ELSE CONCAT("%", DESC_CONTAIN, "%") END AND
description NOT LIKE CASE WHEN LENGTH(DESC_NOT_CONTAIN) = 0 THEN CONCAT("a", description) ELSE CONCAT("%", DESC_NOT_CONTAIN, "%") END AND
LENGTH(description) > DESC_EXCEED AND
LENGTH(description) < CASE WHEN DESC_LESS = -1 THEN ~0 ELSE DESC_LESS END AND
description = CASE WHEN DESC_ALL_CAPS = 1 THEN BINARY UPPER(description) ELSE description END AND
createdDate < CREATED_BEFORE AND
createdDate > CREATED_AFTER AND
views > VIEW_EXCEED AND
views < CASE WHEN VIEW_LESS = -1 THEN ~0 ELSE VIEW_LESS END AND
likes > LIKE_EXCEED AND
likes < CASE WHEN LIKE_LESS = -1 THEN ~0 ELSE LIKE_LESS END AND
dislikes > DISLIKE_EXCEED AND
dislikes < CASE WHEN DISLIKE_LESS = -1 THEN ~0 ELSE DISLIKE_LESS END AND
com_num > COM_EXCEED AND
com_num < CASE WHEN COM_LESS = -1 THEN ~0 ELSE COM_LESS END AND
duration > DURATION_EXCEED AND
duration < CASE WHEN DURATION_LESS =-1 THEN ~0 ELSE DURATION_LESS END AND
category = CASE WHEN LENGTH(CATEGORY_GIVEN) = 0 THEN category ELSE CATEGORY_GIVEN END
ORDER BY
CASE WHEN SORT_PARAM = 'View Count' AND SORT_DIR = 'Descending' THEN views END DESC, CASE WHEN SORT_PARAM = 'View Count' AND SORT_DIR = 'Ascending' THEN views END ASC, CASE WHEN SORT_PARAM = 'Like Count' AND SORT_DIR = 'Descending' THEN likes END DESC, CASE WHEN SORT_PARAM = 'Like Count' AND SORT_DIR = 'Ascending' THEN likes END ASC, CASE WHEN SORT_PARAM = 'Dislike Count' AND SORT_DIR = 'Descending' THEN dislikes END DESC, CASE WHEN SORT_PARAM = 'Dislike Count' AND SORT_DIR = 'Ascending' THEN dislikes END ASC, CASE WHEN SORT_PARAM = 'Comment Count' AND SORT_DIR = 'Descending' THEN com_num END DESC, CASE WHEN SORT_PARAM = 'Comment Count' AND SORT_DIR = 'Ascending' THEN com_num END ASC, CASE WHEN SORT_PARAM = 'Duration' AND SORT_DIR = 'Descending' THEN duration END DESC, CASE WHEN SORT_PARAM = 'Duration' AND SORT_DIR = 'Ascending' THEN duration END ASC, CASE WHEN SORT_PARAM = 'Title Length' AND SORT_DIR = 'Descending' THEN LENGTH(title) END DESC, CASE WHEN SORT_PARAM = 'Title Length' AND SORT_DIR = 'Ascending' THEN LENGTH(title) END ASC, CASE WHEN SORT_PARAM = 'Description Length' AND SORT_DIR = 'Descending' THEN LENGTH(description) END DESC, CASE WHEN SORT_PARAM = 'Description Length' AND SORT_DIR = 'Ascending' THEN LENGTH(description) END ASC,
CASE WHEN SORT_DIR = 'Descending' THEN
CASE
WHEN SORT_PARAM = 'Datetime Posted' THEN createdDate
WHEN SORT_PARAM = 'Title (alphabetic)' THEN title
WHEN SORT_PARAM = 'Description (alphabetic)' THEN description
WHEN SORT_PARAM = 'Category' THEN category
WHEN SORT_PARAM = 'Channel ID' THEN channel_id
ELSE video_id
END
END DESC,
CASE WHEN SORT_DIR = 'Ascending' THEN
CASE
WHEN SORT_PARAM	= 'Datetime Posted' THEN createdDate
WHEN SORT_PARAM	= 'Title (alphabetic)' THEN title
WHEN SORT_PARAM	= 'Description (alphabetic)' THEN description
WHEN SORT_PARAM	= 'Category' THEN category
WHEN SORT_PARAM	= 'Channel ID' THEN channel_id
ELSE video_id
END
END ASC
LIMIT 18446744073709551615
) AS p
WHERE @rownum < MAX_RESULTS;
END;
//
delimiter ;
